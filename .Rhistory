w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(x-1)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(w)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(x-1)
density = (x^2)*w
theta = mean(density)/mean(w)
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(w)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(x-1)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(w)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(w)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rnorm(i * 100)
x = abs(x)+1
f = (x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
a = x-1
g = 2*sqrt(1/(2*pi))*exp(-(a^2)/2)
fg = f/g
sample_means[i] <- mean(fg)
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
mean(fg)
var(fg)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(density)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x = rnorm(i * 100)
x = abs(x)+1
g = (x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
a = x-1
norm2 = 2*sqrt(1/(2*pi))*exp(-(a^2)/2)
density = g/norm2
theta = mean(density)
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(density)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(density)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x = rnorm(i * 100)
x = abs(x)+1
g = (x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
a = x-1
norm2 = 2*sqrt(1/(2*pi))*exp(-(a^2)/2)
density = g/norm2
theta = mean(density)
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(density)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(density)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rnorm(i * 100)
f <- function(x) {
(x^2) * (x >= 1)
}
density <- f(x)
theta = mean(density)
sample_means[i] <- theta
}
g = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(g,1,Inf)
theta
var(density)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 100
sample_means <- numeric(N)
for (i in 1:N) {
x <- rnorm(i * 100)
f <- function(x) {
(x^2) * (x >= 1)
}
density <- f(x)
theta = mean(density)
sample_means[i] <- theta
}
g = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(g,1,Inf)
theta
var(density)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rnorm(i * 100)
f <- function(x) {
(x^2) * (x >= 1)
}
density <- f(x)
theta = mean(density)
sample_means[i] <- theta
}
g = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(g,1,Inf)
theta
var(density)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(x^2)*((1-pnorm(1))^2)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(x^2)/((1-pnorm(1))^2)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(theta)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(density/w)
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(density/w)*(1-pnorm(1))^2
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
N <- 1000
sample_means <- numeric(N)
for (i in 1:N) {
x <- rexp(i*100)+1
w = (sqrt(1/(2*pi))*exp(-(x^2)/2))/exp(1-x)
density = (x^2)*w
theta = mean(density)/mean(w)*(1-pnorm(1))
sample_means[i] <- theta
}
G = function(x){
(x^2)*sqrt(1/(2*pi))*exp(-(x^2)/2)
}
y = integrate(G,1,Inf)
theta
var(density)*(1-pnorm(1))^2
y$value
# Plotting the convergence plot
plot(seq(100, N * 100, by = 100), sample_means, type = 'l',
xlab = 'Number of samples', ylab = 'Sample mean',
main = 'Convergence Plot for Sample Mean of f(x)')
abline(h = y$value,col = 'red')  # Adding horizontal line for theoretical mean
#設定不同樣本大小
sample_size <- seq(from=100, to=10000, by=100)
n_reps <- 100
#創建儲存估計值的空集合
theta_hat <- matrix(NA, nrow = length(sample_size), ncol = n_reps)
var_hat <- rep(NA, length(sample_size))
for(j in 1:n_reps){
#使用不同大小的樣本數進行估計並儲存估計值
for (i in 1:length(sample_size)){
x <- rnorm(sample_size[i])
x[x<1] <- 0 # Indicator function
theta_hat[i, j] <- mean(x^2) # 求x^2期望值
}
}
theta_hat_mean <- rowMeans(theta_hat) # 求重複間的估計值平均
for (i in 1:length(sample_size)) { # 計算估計值theta的變異數
var_hat[i] <- var(theta_hat[i, ])
}
#做圖
plot(sample_size, theta_hat_mean, type = "l", xlab = "Sample Size", ylab = "Theta hat",
main = "Convergence of Monte Carlo Approximation")
plot(sample_size, var_hat, type = "l", xlab = "Sample Size", ylab = "Variance hat",
main = "Convergence of Monte Carlo Approximation")
install.packages("testthat")
library(testthat)
all.equal(2,4)
getwd()
setwd("C:/Users/USER/Desktop")
getwd()
setwd("C:/Users/USER/Documents")
getwd()
all.equal(2,4)
setwd("C:/Users/USER/Documents")
install.packages("testthat")
install.packages("testthat")
all.equal(2,4)
all.equal(2,4)
expext_equal?
expecxt_equal?
expect_equal(10,10)
all.equal(2,4)
library(testthat)
expect_equal(10,10)
x = function(y){
output = y + 1
}
test_that("test.R")
plus_one = function(y){
output = y + 1
}
test_that("test.R")
test_that(?)
test_that?
help("test_that")
test_that("test.R",{
expect_equal(x(20),22)
})
test_that("test.R",{
expect_equal(x(20),21)
})
plus_one = function(y){
output = y + 1
}
test_that("test.R",{
expect_equal(plus_one(20),21)
})
test_that("test.R",{
expect_equal(plus_one(20),21)
})
plus_one = function(y){
output = y + 1
}
test_that("test.R",{
expect_equal(plus_one(20),21)
})
test_that("test.R",{
expect_equal(plus_one(20),21)
})
test_that("plus_one",{
expect_equal(plus_one(20),21)
})
test_that("minus_one",{
expect_equal(minus_one(20),19)
})
minus_one = function(y){
output = y - 1
}
test_that("minus_one",{
expect_equal(minus_one(20),19)
})
T = function(x){
out = "謝瑞亭小雞雞"
}
test_that("T",{
expect_equal(T(20),19)
})
T = function(x){
out = paste0("謝瑞亭小雞雞有",x,"公分")
}
test_that("T",{
expect_equal(T(3),"謝瑞亭小雞雞有3公分")
})
library(shiny); runApp('//wsl.localhost/Ubuntu/home/lai/app/特有魚app.R')
